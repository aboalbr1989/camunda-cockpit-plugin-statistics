<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cockpit.statistics">
    
  <resultMap id="incidentCountMap"
    type="org.camunda.cockpit.plugin.statistics.dto.process.IncidentInstanceCountDto">
    <result property="incidentMsg" column="INCIDENT_MSG_" />
    <result property="messageCount" column="MASSAGE_COUNT" />
    <result property="incidentType" column="INCIDENT_TYPE_" />
    <result property="activityId" column="ACTIVITY_ID_" />
    <result property="processKey" column="KEY_" />
    <result property="processName" column="NAME_" />
    <result property="createTime" column="CREATE_TIME_" />
  </resultMap>

  <!-- currently not used -->
  <select id="selectIncidentCountsByProcessDefinition"
    resultMap="incidentCountMap">
	  SELECT
	    T.INCIDENT_MSG_,
	    Count(T.INCIDENT_MSG_) AS MASSAGE_COUNT,
	    T.INCIDENT_TYPE_,
	    T.ACTIVITY_ID_,
	    T.KEY_,
	    T.NAME_,
	    T.CREATE_TIME_
	  FROM 
	      ( SELECT  
	        E.INCIDENT_MSG_, 
	        E.INCIDENT_TYPE_, 
	        E.ACTIVITY_ID_, 
	        F.KEY_, 
	        F.NAME_,
	        E.CREATE_TIME_
	      FROM
	        ACT_HI_INCIDENT E
	      INNER JOIN
	        ACT_RE_PROCDEF F
	      ON 
	        F.ID_=E.PROC_DEF_ID_
	      ) T
	    GROUP BY
	      INCIDENT_MSG_, 
	      ACTIVITY_ID_, 
	      INCIDENT_TYPE_,
	      T.KEY_,
	      T.NAME_,
	      CREATE_TIME_ 
	    ORDER BY
	      CREATE_TIME_
    </select>
	    
	  <resultMap id="processInstanceVersionCountMap"
    type="org.camunda.cockpit.plugin.statistics.dto.process.ProcessInstanceVersionsCountDto">
    <result property="processDefinitionKey" column="KEY_" />
                <result property="version" column="VERSION" />
    <result property="runningInstanceCount" column="RUNNING_COUNT" />
    <result property="endedInstanceCount" column="ENDED_COUNT" />
    <result property="failedInstanceCount" column="EXCEPTIONS_COUNT" />
    <result property="count" column="COUNT" />
    <result property="duration" column="AVG_DURATION" />
    <result property="minDuration" column="MIN_DURATION" />
    <result property="maxDuration" column="MAX_DURATION" />
  </resultMap>

  <select id="selectProcessInstanceVersionCountsByProcessDefinition"
    resultMap="processInstanceVersionCountMap">
    SELECT
      KEY_,
      def.VERSION_ AS VERSION,
      SUM( CASE WHEN E.END_TIME_ IS NULL THEN 1 ELSE 0 END ) AS RUNNING_COUNT,
      SUM( CASE WHEN E.END_TIME_ IS NOT NULL THEN 1 ELSE 0 END ) AS
      ENDED_COUNT,
      SUM( HAS_EXCEPTION ) AS EXCEPTIONS_COUNT,
      <!-- count, min, max, avg, duration -->
      <include refid="cockpit.statistics.commonAggregations"/>
    FROM
      ACT_HI_PROCINST E
        LEFT JOIN
        ( SELECT 
          EXECUTION_ID_, 
          CASE WHEN EXCEPTION_STACK_ID_ IS NOT NULL AND RETRIES_ >= 0 THEN 1 ELSE NULL END AS HAS_EXCEPTION 
        FROM 
          ACT_RU_JOB 
        ) J
        ON 
          J.EXECUTION_ID_ = E.ID_
        LEFT JOIN
          ACT_RE_PROCDEF def
        ON 
          def.ID_ = E.PROC_DEF_ID_
    WHERE
      E.ID_ = E.PROC_INST_ID_
    Group by 
      KEY_,
      def.VERSION_
  </select>
    
    
</mapper>