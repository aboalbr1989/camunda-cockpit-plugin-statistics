<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cockpit.statistics">

	<resultMap id="processInstanceVersionCountMap"
		type="org.camunda.cockpit.plugin.statistics.db.ProcessInstanceVersionsCountDto">
		<result property="processDefinitionKey" column="KEY_" />
                <result property="version" column="VERSION" />
		<result property="runningInstanceCount" column="RUNNING_COUNT" />
		<result property="endedInstanceCount" column="ENDED_COUNT" />
		<result property="failedInstanceCount" column="EXCEPTIONS_COUNT" />
		<result property="count" column="COUNTER" />
		<result property="duration" column="AVG_DURATION" />
		<result property="minDuration" column="MIN_DURATION" />
		<result property="maxDuration" column="MAX_DURATION" />
	</resultMap>

	<select id="selectProcessInstanceVersionCountsByProcessDefinition"
		resultMap="processInstanceVersionCountMap">
		SELECT
			KEY_,
                        def.VERSION_ AS VERSION,
			SUM( CASE WHEN E.END_TIME_ IS NULL THEN 1 ELSE 0 END ) AS RUNNING_COUNT,
			SUM( CASE WHEN E.END_TIME_ IS NOT NULL THEN 1 ELSE 0 END ) AS
			ENDED_COUNT,
			SUM( HAS_EXCEPTION ) AS EXCEPTIONS_COUNT,
			COUNT(KEY_) AS COUNTER,
			AVG( DURATION_ ) AS AVG_DURATION,
			MIN( DURATION_ ) AS MIN_DURATION,
			MAX( DURATION_ ) AS MAX_DURATION
		FROM
			ACT_HI_PROCINST E
				LEFT JOIN
				( SELECT 
					EXECUTION_ID_, 
					CASE WHEN EXCEPTION_STACK_ID_ IS NOT NULL AND RETRIES_ >= 0 THEN 1 ELSE NULL END AS HAS_EXCEPTION 
				FROM 
					ACT_RU_JOB 
				) J
				ON 
					J.EXECUTION_ID_ = E.ID_
				LEFT JOIN
					ACT_RE_PROCDEF def
				ON 
					def.ID_ = E.PROC_DEF_ID_
		WHERE
			E.ID_ = E.PROC_INST_ID_
		Group by 
			KEY_,
                        def.VERSION_
	</select>

</mapper>